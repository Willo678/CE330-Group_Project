Index: src/main/java/userInterface/targetSelectionUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package userInterface;\r\n\r\nimport XP_Metrics.EvaluateXP;\r\nimport utils.hintTextField;\r\n\r\nimport javax.swing.*;\r\nimport javax.swing.border.EmptyBorder;\r\nimport javax.swing.border.LineBorder;\r\nimport java.awt.*;\r\nimport java.io.File;\r\nimport java.nio.file.InvalidPathException;\r\nimport java.nio.file.Paths;\r\n\r\n\r\nimport static XP_Metrics.indentationChecker.checkIndentation;\r\nimport static utils.directoryContainsJava.directoryContainsJava;\r\nimport static utils.getJavaSubdirectories.getJavaSubdirectories;\r\n\r\npublic class targetSelectionUI extends JPanel {\r\n\r\n    public targetSelectionUI(){\r\n        this(0,0);\r\n    }\r\n\r\n    public targetSelectionUI(int width, int height){\r\n\r\n        super();\r\n        this.setLayout(new GridBagLayout());\r\n\r\n        JFileChooser folderSelect = new JFileChooser();\r\n        folderSelect.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\r\n\r\n        GridBagConstraints gbc = new GridBagConstraints();\r\n\r\n        //Holds components\r\n        this.setBorder(new EmptyBorder(0, 30, 0, 30));\r\n        if (height<=0 || width<=0) {\r\n            gbc.weightx=1; gbc.fill = GridBagConstraints.HORIZONTAL;\r\n        } else {\r\n            this.setSize(width, height);\r\n        }\r\n\r\n\r\n        gbc = new GridBagConstraints();\r\n\r\n        //Text field, user can manually enter a path, or select one using the dialogue\r\n        gbc.gridx = 0; gbc.gridy = 0; gbc.fill = GridBagConstraints.BOTH; gbc.weightx = 1;\r\n        JTextField filePath = new hintTextField(\"Select a project directory:\"); this.add(filePath, gbc);\r\n        filePath.setBackground(new Color(0xD1D1D1));\r\n        filePath.setForeground(new Color(0x5C5C5C));\r\n        filePath.setBorder(new LineBorder(new Color(0), 1));\r\n        filePath.setFont(filePath.getFont().deriveFont(Font.ITALIC, 10));\r\n        filePath.setMargin(new Insets(3, 10, 3, 0));\r\n\r\n\r\n        //Button to trigger the file select dialogue\r\n        gbc.gridx = 1; gbc.gridy = 0; gbc.fill = GridBagConstraints.NONE; gbc.weightx = 0;\r\n        JButton selectButton = new JButton(\"SELECT\"); this.add(selectButton, gbc);\r\n        selectButton.grabFocus();\r\n        selectButton.addActionListener((x) -> { //had to add \"(x) or the lambda wouldnt work\"\r\n            int returnVal = folderSelect.showOpenDialog(this);\r\n            if (returnVal==JFileChooser.APPROVE_OPTION) {\r\n                filePath.setText(folderSelect.getSelectedFile().getAbsolutePath());\r\n            } else {\r\n                //Either an error occurred, or user cancelled operation\r\n            }\r\n        });\r\n\r\n\r\n        //Button to confirm selection and pass on the path to other areas of the project\r\n        gbc.gridx = 0; gbc.gridy = 1; gbc.fill = GridBagConstraints.HORIZONTAL; gbc.gridwidth = 2;\r\n        JButton confirmButton = new JButton(\"CONFIRM\"); this.add(confirmButton, gbc);\r\n        confirmButton.addActionListener((x) -> { //had to add \"(x) or the lambda wouldnt work\"\r\n            String path = filePath.getText();\r\n            System.out.println(path);\r\n            if (!path.isEmpty()){\r\n                try {\r\n                    Paths.get(path);\r\n                    if (!directoryContainsJava(new File(path))){throw new InvalidPathException(path, \"Given path does not contain a java file\");}\r\n                    System.out.println(\"Success, pass on to other modules: \"+path);\r\n\r\n                    //Pass on path to be analysed\r\n                    for (String p : getJavaSubdirectories(new File(path))){\r\n                        System.out.println(p);\r\n                        //EvaluateXP evaluator = new EvaluateXP(p);\r\n                        //System.out.println(evaluator.scoreIndentation);\r\n                       // System.out.println(evaluator.normalisedScore());\r\n                        //System.out.println();\r\n                    }\r\n\r\n\r\n                } catch (InvalidPathException | NullPointerException e) {\r\n                    System.out.println(\"Invalid path\");\r\n                    e.printStackTrace();\r\n                }\r\n            }\r\n        });\r\n\r\n\r\n        this.setVisible(true);\r\n    }\r\n\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/userInterface/targetSelectionUI.java b/src/main/java/userInterface/targetSelectionUI.java
--- a/src/main/java/userInterface/targetSelectionUI.java	(revision d60d546f9c456232e5259aab522d7db72d18ea17)
+++ b/src/main/java/userInterface/targetSelectionUI.java	(date 1732630326053)
@@ -82,7 +82,7 @@
                     //Pass on path to be analysed
                     for (String p : getJavaSubdirectories(new File(path))){
                         System.out.println(p);
-                        //EvaluateXP evaluator = new EvaluateXP(p);
+                        EvaluateXP evaluator = new EvaluateXP(p);
                         //System.out.println(evaluator.scoreIndentation);
                        // System.out.println(evaluator.normalisedScore());
                         //System.out.println();
