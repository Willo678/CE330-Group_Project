Index: src/main/java/userInterface/targetSelectionUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package userInterface;\n\nimport XP_Metrics.EvaluateXP;\nimport utils.hintTextField;\n\nimport javax.swing.*;\nimport javax.swing.border.EmptyBorder;\nimport javax.swing.border.LineBorder;\nimport java.awt.*;\nimport java.io.File;\nimport java.nio.file.InvalidPathException;\nimport java.nio.file.Paths;\n\n\nimport static XP_Metrics.indentationChecker.checkIndentation;\nimport static utils.directoryContainsJava.directoryContainsJava;\nimport static utils.getJavaSubdirectories.getJavaSubdirectories;\n\npublic class targetSelectionUI extends JPanel {\n\n    public targetSelectionUI(){\n        this(0,0);\n    }\n\n    public targetSelectionUI(int width, int height){\n\n        super();\n        this.setLayout(new GridBagLayout());\n\n        JFileChooser folderSelect = new JFileChooser();\n        folderSelect.setFileSelectionMode(JFileChooser.DIRECTORIES_ONLY);\n\n        GridBagConstraints gbc = new GridBagConstraints();\n\n        //Holds components\n        this.setBorder(new EmptyBorder(0, 30, 0, 30));\n        if (height<=0 || width<=0) {\n            gbc.weightx=1; gbc.fill = GridBagConstraints.HORIZONTAL;\n        } else {\n            this.setSize(width, height);\n        }\n\n\n        gbc = new GridBagConstraints();\n\n        //Text field, user can manually enter a path, or select one using the dialogue\n        gbc.gridx = 0; gbc.gridy = 0; gbc.fill = GridBagConstraints.BOTH; gbc.weightx = 1;\n        JTextField filePath = new hintTextField(\"Select a project directory:\"); this.add(filePath, gbc);\n        filePath.setBackground(new Color(0xD1D1D1));\n        filePath.setForeground(new Color(0x5C5C5C));\n        filePath.setBorder(new LineBorder(new Color(0), 1));\n        filePath.setFont(filePath.getFont().deriveFont(Font.ITALIC, 10));\n        filePath.setMargin(new Insets(3, 10, 3, 0));\n\n\n        //Button to trigger the file select dialogue\n        gbc.gridx = 1; gbc.gridy = 0; gbc.fill = GridBagConstraints.NONE; gbc.weightx = 0;\n        JButton selectButton = new JButton(\"SELECT\"); this.add(selectButton, gbc);\n        selectButton.grabFocus();\n        selectButton.addActionListener((x) -> { //had to add \"(x) or the lambda wouldnt work\"\n            int returnVal = folderSelect.showOpenDialog(this);\n            if (returnVal==JFileChooser.APPROVE_OPTION) {\n                filePath.setText(folderSelect.getSelectedFile().getAbsolutePath());\n            } else {\n                //Either an error occurred, or user cancelled operation\n            }\n        });\n\n\n        //Button to confirm selection and pass on the path to other areas of the project\n        gbc.gridx = 0; gbc.gridy = 1; gbc.fill = GridBagConstraints.HORIZONTAL; gbc.gridwidth = 2;\n        JButton confirmButton = new JButton(\"CONFIRM\"); this.add(confirmButton, gbc);\n        confirmButton.addActionListener((x) -> { //had to add \"(x) or the lambda wouldnt work\"\n            String path = filePath.getText();\n            System.out.println(path);\n            if (!path.isEmpty()){\n                try {\n                    Paths.get(path);\n                    if (!directoryContainsJava(new File(path))){throw new InvalidPathException(path, \"Given path does not contain a java file\");}\n                    System.out.println(\"Success, pass on to other modules: \"+path);\n\n                    //Pass on path to be analysed\n                    // TODO: get path which can be used by other objects\n                    // need this for source code display\n                    for (String p : getJavaSubdirectories(new File(path))){\n                        System.out.println(p);\n                        EvaluateXP evaluator = new EvaluateXP(p);\n                        System.out.println(evaluator.normalisedScore());\n                        //System.out.println(evaluator.scoreIndentation);\n                       // System.out.println(evaluator.normalisedScore());\n                        //System.out.println();\n                    }\n\n                } catch (InvalidPathException | NullPointerException e) {\n                    System.out.println(\"Invalid path\");\n                    e.printStackTrace();\n                }\n            }\n        });\n\n\n        this.setVisible(true);\n    }\n\n\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/userInterface/targetSelectionUI.java b/src/main/java/userInterface/targetSelectionUI.java
--- a/src/main/java/userInterface/targetSelectionUI.java	(revision 864256b75fdf39252ff3ae7237afeac4faf404b5)
+++ b/src/main/java/userInterface/targetSelectionUI.java	(date 1733239138763)
@@ -1,5 +1,6 @@
 package userInterface;
 
+import XP_Metrics.CodeAnalysis;
 import XP_Metrics.EvaluateXP;
 import utils.hintTextField;
 
@@ -97,6 +98,31 @@
                 }
             }
         });
+        codeMetricsUI metricsUI = new codeMetricsUI();
+        add(metricsUI, BorderLayout.CENTER);
+
+        confirmButton.addActionListener((x) -> {
+            String path = filePath.getText();
+            if (!path.isEmpty()) {
+                try {
+                    Paths.get(path);
+                    if (!directoryContainsJava(new File(path))) {
+                        throw new InvalidPathException(path, "No Java files found");
+                    }
+
+                    for (String p : getJavaSubdirectories(new File(path))) {
+                        EvaluateXP evaluator = new EvaluateXP(p);
+                        metricsUI.updateMetrics(
+                                evaluator.scoreIndentation,
+                                evaluator.scoreClassStructure,
+                                CodeAnalysis.CodeAnalysis(evaluator.bracePairs)
+                        );
+                    }
+                } catch (Exception e) {
+                    JOptionPane.showMessageDialog(this, "Error: " + e.getMessage());
+                }
+            }
+        });
 
 
         this.setVisible(true);
Index: src/main/java/userInterface/codeMetricsUI.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package userInterface;\n\nimport XP_Metrics.Score;\n\nimport javax.swing.*;\nimport java.awt.*;\nimport java.util.ArrayList;\n\npublic class codeMetricsUI extends JPanel {\n    private final DialPanel totalScoreDial;\n    private final JPanel metricsPanel;\n    private final JTextArea detailsArea;\n\n    public codeMetricsUI() {\n        setLayout(new BorderLayout(10, 10));\n\n        metricsPanel = new JPanel();\n        metricsPanel.setLayout(new GridLayout(3, 1, 5, 5));\n        metricsPanel.setBorder(BorderFactory.createTitledBorder(\"Detailed Scores\"));\n\n        detailsArea = new JTextArea();\n        detailsArea.setEditable(false);\n        JScrollPane scrollPane = new JScrollPane(detailsArea);\n        scrollPane.setPreferredSize(new Dimension(300, 150));\n\n        totalScoreDial = new DialPanel(\"Overall Score\");\n\n        JPanel leftPanel = new JPanel(new BorderLayout(5, 5));\n        leftPanel.add(metricsPanel, BorderLayout.NORTH);\n        leftPanel.add(scrollPane, BorderLayout.CENTER);\n\n        add(leftPanel, BorderLayout.CENTER);\n        add(totalScoreDial, BorderLayout.EAST);\n    }\n\n    public void updateMetrics(ArrayList<Score> indentation, ArrayList<Score> classStructure, ArrayList<Score> codeAnalysis) {\n        metricsPanel.removeAll();\n        detailsArea.setText(\"\");\n\n        int indentationScore = Math.max(100 - sumScores(indentation), 0);\n        int classStructureScore = Math.max(100 - sumScores(classStructure), 0);\n        int codeAnalysisScore = Math.max(100 - sumScores(codeAnalysis), 0);\n\n        metricsPanel.add(createScorePanel(\"Indentation\", indentationScore, indentation));\n        metricsPanel.add(createScorePanel(\"Class Structure\", classStructureScore, classStructure));\n        metricsPanel.add(createScorePanel(\"Code Analysis\", codeAnalysisScore, codeAnalysis));\n\n        double averageScore = (indentationScore + classStructureScore + codeAnalysisScore) / 300.0;\n        totalScoreDial.setScore(averageScore);\n\n        StringBuilder details = new StringBuilder(\"Issue Details:\\n\\n\");\n        appendScoreDetails(details, \"Indentation\", indentation);\n        appendScoreDetails(details, \"Class Structure\", classStructure);\n        appendScoreDetails(details, \"Code Analysis\", codeAnalysis);\n        detailsArea.setText(details.toString());\n\n        revalidate();\n        repaint();\n    }\n\n    private JPanel createScorePanel(String label, int score, ArrayList<Score> details) {\n        JPanel panel = new JPanel(new FlowLayout(FlowLayout.LEFT));\n        panel.add(new JLabel(label + \": \" + score + \"%\"));\n        return panel;\n    }\n\n    private void appendScoreDetails(StringBuilder sb, String category, ArrayList<Score> scores) {\n        if (!scores.isEmpty()) {\n            sb.append(category).append(\":\\n\");\n            for (Score score : scores) {\n                sb.append(\"- \").append(score.reason).append(\" (-\").append(score.score).append(\")\\n\");\n            }\n            sb.append(\"\\n\");\n        }\n    }\n\n    private int sumScores(ArrayList<Score> scores) {\n        return scores.stream().mapToInt(s -> s.score).sum();\n    }\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/userInterface/codeMetricsUI.java b/src/main/java/userInterface/codeMetricsUI.java
--- a/src/main/java/userInterface/codeMetricsUI.java	(revision 864256b75fdf39252ff3ae7237afeac4faf404b5)
+++ b/src/main/java/userInterface/codeMetricsUI.java	(date 1733239138766)
@@ -34,28 +34,30 @@
     }
 
     public void updateMetrics(ArrayList<Score> indentation, ArrayList<Score> classStructure, ArrayList<Score> codeAnalysis) {
-        metricsPanel.removeAll();
-        detailsArea.setText("");
+        SwingUtilities.invokeLater(() -> {
+            metricsPanel.removeAll();
+            detailsArea.setText("");
 
-        int indentationScore = Math.max(100 - sumScores(indentation), 0);
-        int classStructureScore = Math.max(100 - sumScores(classStructure), 0);
-        int codeAnalysisScore = Math.max(100 - sumScores(codeAnalysis), 0);
+            int indentationScore = Math.max(100 - sumScores(indentation), 0);
+            int classStructureScore = Math.max(100 - sumScores(classStructure), 0);
+            int codeAnalysisScore = Math.max(100 - sumScores(codeAnalysis), 0);
 
-        metricsPanel.add(createScorePanel("Indentation", indentationScore, indentation));
-        metricsPanel.add(createScorePanel("Class Structure", classStructureScore, classStructure));
-        metricsPanel.add(createScorePanel("Code Analysis", codeAnalysisScore, codeAnalysis));
+            metricsPanel.add(createScorePanel("Indentation", indentationScore, indentation));
+            metricsPanel.add(createScorePanel("Class Structure", classStructureScore, classStructure));
+            metricsPanel.add(createScorePanel("Code Analysis", codeAnalysisScore, codeAnalysis));
 
-        double averageScore = (indentationScore + classStructureScore + codeAnalysisScore) / 300.0;
-        totalScoreDial.setScore(averageScore);
+            double averageScore = (indentationScore + classStructureScore + codeAnalysisScore) / 300.0;
+            totalScoreDial.setScore(averageScore);
 
-        StringBuilder details = new StringBuilder("Issue Details:\n\n");
-        appendScoreDetails(details, "Indentation", indentation);
-        appendScoreDetails(details, "Class Structure", classStructure);
-        appendScoreDetails(details, "Code Analysis", codeAnalysis);
-        detailsArea.setText(details.toString());
+            StringBuilder details = new StringBuilder("Issue Details:\n\n");
+            appendScoreDetails(details, "Indentation", indentation);
+            appendScoreDetails(details, "Class Structure", classStructure);
+            appendScoreDetails(details, "Code Analysis", codeAnalysis);
+            detailsArea.setText(details.toString());
 
-        revalidate();
-        repaint();
+            metricsPanel.revalidate();
+            metricsPanel.repaint();
+        });
     }
 
     private JPanel createScorePanel(String label, int score, ArrayList<Score> details) {
Index: src/main/java/XP_Metrics/EvaluateXP.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package XP_Metrics;\n\nimport java.util.ArrayList;\nimport java.util.Arrays;\n\nimport XP_Metrics.getTokens.*;\n\npublic class EvaluateXP {\n\n    ArrayList<Token> bracePairs;\n    public ArrayList<Score> scoreIndentation;\n    ArrayList<Score> scoreClassStructure;\n    int scoreMethodStructure;\n\n\n    public EvaluateXP(String path) {\n        bracePairs = getTokens.getTokens(path);\n\n        scoreIndentation = indentationChecker.checkIndentation(\n                bracePairs\n                        .stream()\n                        .filter(BracePair.class::isInstance)\n                        .map(BracePair.class::cast).toList()\n        );\n        scoreClassStructure = classChecker.checkImports(path, bracePairs);\n        ArrayList<Score> codeAnalysisScores = CodeAnalysis.CodeAnalysis(bracePairs);\n        scoreMethodStructure = 100 - sumScoreArray(codeAnalysisScores);\n    }\n\n    public int normalisedScore() {\n        //Indentation, class structure, method structure (add as necessary)\n        int[] weights = new int[]{25,25,25};\n        int[] percentages = new int[]{getScorePercentage(scoreIndentation), getScorePercentage(scoreClassStructure), scoreMethodStructure};\n\n\n        int weightTotal = Arrays.stream(weights).sum();\n        int result = 0;\n        for (int i=0; i<weights.length; i++){\n            result += percentages[i]*(weights[i]/weightTotal);\n        }\n        return result;\n\n\n    }\n\n    private static int sumScoreArray(ArrayList<Score> scoreArray) {\n        return scoreArray.stream().mapToInt(a -> a.score).sum();\n    }\n\n    private static int getScorePercentage(ArrayList<Score> scoreArray) {\n        return Math.max((100-sumScoreArray(scoreArray)), 0);\n    }\n\n}\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/XP_Metrics/EvaluateXP.java b/src/main/java/XP_Metrics/EvaluateXP.java
--- a/src/main/java/XP_Metrics/EvaluateXP.java	(revision 864256b75fdf39252ff3ae7237afeac4faf404b5)
+++ b/src/main/java/XP_Metrics/EvaluateXP.java	(date 1733239229044)
@@ -6,49 +6,36 @@
 import XP_Metrics.getTokens.*;
 
 public class EvaluateXP {
-
-    ArrayList<Token> bracePairs;
+    public ArrayList<Token> bracePairs;
     public ArrayList<Score> scoreIndentation;
-    ArrayList<Score> scoreClassStructure;
+    public ArrayList<Score> scoreClassStructure;
+    public ArrayList<Score> codeAnalysisScores;
     int scoreMethodStructure;
 
-
     public EvaluateXP(String path) {
         bracePairs = getTokens.getTokens(path);
-
         scoreIndentation = indentationChecker.checkIndentation(
-                bracePairs
-                        .stream()
+                bracePairs.stream()
                         .filter(BracePair.class::isInstance)
                         .map(BracePair.class::cast).toList()
         );
         scoreClassStructure = classChecker.checkImports(path, bracePairs);
-        ArrayList<Score> codeAnalysisScores = CodeAnalysis.CodeAnalysis(bracePairs);
+        codeAnalysisScores = CodeAnalysis.CodeAnalysis(bracePairs);
         scoreMethodStructure = 100 - sumScoreArray(codeAnalysisScores);
     }
 
     public int normalisedScore() {
-        //Indentation, class structure, method structure (add as necessary)
-        int[] weights = new int[]{25,25,25};
-        int[] percentages = new int[]{getScorePercentage(scoreIndentation), getScorePercentage(scoreClassStructure), scoreMethodStructure};
+        int[] weights = new int[]{25, 25, 25, 25};
+        int[] percentages = new int[]{
+                getScorePercentage(scoreIndentation),
+                getScorePercentage(scoreClassStructure),
+                scoreMethodStructure,
+                getScorePercentage(codeAnalysisScores)
+        };
 
-
-        int weightTotal = Arrays.stream(weights).sum();
         int result = 0;
-        for (int i=0; i<weights.length; i++){
-            result += percentages[i]*(weights[i]/weightTotal);
+        for (int i = 0; i < weights.length; i++) {
+            result += (percentages[i] * weights[i]) / 100;
         }
         return result;
-
-
-    }
-
-    private static int sumScoreArray(ArrayList<Score> scoreArray) {
-        return scoreArray.stream().mapToInt(a -> a.score).sum();
-    }
-
-    private static int getScorePercentage(ArrayList<Score> scoreArray) {
-        return Math.max((100-sumScoreArray(scoreArray)), 0);
-    }
-
-}
+    }
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\n  <component name=\"MavenProjectsManager\">\n    <option name=\"originalFiles\">\n      <list>\n        <option value=\"$PROJECT_DIR$/pom.xml\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" default=\"true\" project-jdk-name=\"corretto-22\" project-jdk-type=\"JavaSDK\">\n    <output url=\"file://$PROJECT_DIR$/out\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 864256b75fdf39252ff3ae7237afeac4faf404b5)
+++ b/.idea/misc.xml	(date 1733239304457)
@@ -8,7 +8,7 @@
       </list>
     </option>
   </component>
-  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="corretto-22" project-jdk-type="JavaSDK">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_22" default="true" project-jdk-name="corretto-22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1732633038937)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]/shelved.patch	(date 1732633038937)
@@ -0,0 +1,15 @@
+Index: src/main/java/XP_Metrics_ReferenceVersion/camelChecker.java
+IDEA additional info:
+Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
+<+>UTF-8
+===================================================================
+diff --git a/src/main/java/XP_Metrics_ReferenceVersion/camelChecker.java b/src/main/java/XP_Metrics_ReferenceVersion/camelChecker.java
+new file mode 100644
+--- /dev/null	(date 1732632933963)
++++ b/src/main/java/XP_Metrics_ReferenceVersion/camelChecker.java	(date 1732632933963)
+@@ -0,0 +1,5 @@
++package XP_Metrics_ReferenceVersion;
++
++public class camelChecker {
++
++}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024__14_57__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024__14_57__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024__14_57__Changes_.xml
new file mode 100644
--- /dev/null	(date 1732633280828)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024__14_57__Changes_.xml	(date 1732633280828)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]" date="1732633039106" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 26/11/2024, 14:57 [Changes]" />
+</changelist>
\ No newline at end of file
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\n<project version=\"4\">\n  <component name=\"AutoImportSettings\">\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\n  </component>\n  <component name=\"ChangeListManager\">\n    <list default=\"true\" id=\"b617a369-fdb8-4b85-91c1-69acbfc3efd4\" name=\"Changes\" comment=\"Added testing for DialPanel\" />\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\n  </component>\n  <component name=\"FileTemplateManagerImpl\">\n    <option name=\"RECENT_TEMPLATES\">\n      <list>\n        <option value=\"Enum\" />\n        <option value=\"Class\" />\n      </list>\n    </option>\n  </component>\n  <component name=\"Git.Settings\">\n    <option name=\"RECENT_BRANCH_BY_REPOSITORY\">\n      <map>\n        <entry key=\"$PROJECT_DIR$/..\" value=\"WillBranch\" />\n      </map>\n    </option>\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$/..\" />\n    <option name=\"RESET_MODE\" value=\"HARD\" />\n  </component>\n  <component name=\"ProjectColorInfo\">{\n  &quot;associatedIndex&quot;: 6\n}</component>\n  <component name=\"ProjectId\" id=\"2of1mbn9qm5lSboevN1xxZbIZTI\" />\n  <component name=\"ProjectLevelVcsManager\">\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\n  </component>\n  <component name=\"ProjectViewState\">\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\n    <option name=\"showLibraryContents\" value=\"true\" />\n  </component>\n  <component name=\"PropertiesComponent\">{\n  &quot;keyToString&quot;: {\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\n    &quot;last_opened_file_path&quot;: &quot;M:/Work/Past Years/Year 2/CE213 - Introduction to Artificial Intelligence/Assignments/Assignment 1/Exercise&quot;,\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\n    &quot;project.structure.last.edited&quot;: &quot;Project&quot;,\n    &quot;project.structure.proportion&quot;: &quot;0.15&quot;,\n    &quot;project.structure.side.proportion&quot;: &quot;0.0&quot;,\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\n  }\n}</component>\n  <component name=\"RunManager\">\n    <configuration name=\"Main\" type=\"Application\" factoryName=\"Application\" temporary=\"true\" nameIsGenerated=\"true\">\n      <option name=\"MAIN_CLASS_NAME\" value=\"Main\" />\n      <module name=\"Code\" />\n      <method v=\"2\">\n        <option name=\"Make\" enabled=\"true\" />\n      </method>\n    </configuration>\n    <recent_temporary>\n      <list>\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.Main\" />\n        <item itemvalue=\"Application.Main\" />\n      </list>\n    </recent_temporary>\n  </component>\n  <component name=\"SharedIndexes\">\n    <attachedChunks>\n      <set>\n        <option value=\"bundled-jdk-9f38398b9061-39b83d9b5494-intellij.indexing.shared.core-IU-241.17011.79\" />\n        <option value=\"bundled-js-predefined-1d06a55b98c1-0b3e54e931b4-JavaScript-IU-241.17011.79\" />\n      </set>\n    </attachedChunks>\n  </component>\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\n  <component name=\"TaskManager\">\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\n      <changelist id=\"b617a369-fdb8-4b85-91c1-69acbfc3efd4\" name=\"Changes\" comment=\"\" />\n      <created>1731245977412</created>\n      <option name=\"number\" value=\"Default\" />\n      <option name=\"presentableId\" value=\"Default\" />\n      <updated>1731245977412</updated>\n      <workItem from=\"1731245978597\" duration=\"94000\" />\n      <workItem from=\"1731246178765\" duration=\"11132000\" />\n      <workItem from=\"1731317512330\" duration=\"33000\" />\n      <workItem from=\"1731417148290\" duration=\"4489000\" />\n      <workItem from=\"1731424530856\" duration=\"2242000\" />\n      <workItem from=\"1732022565649\" duration=\"6877000\" />\n      <workItem from=\"1732627044481\" duration=\"8513000\" />\n    </task>\n    <task id=\"LOCAL-00001\" summary=\"Created new Java project, using Maven\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1731246329435</created>\n      <option name=\"number\" value=\"00001\" />\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1731246329435</updated>\n    </task>\n    <task id=\"LOCAL-00002\" summary=\"Created project directory selection for user with minimal styling\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1731260190046</created>\n      <option name=\"number\" value=\"00002\" />\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1731260190046</updated>\n    </task>\n    <task id=\"LOCAL-00003\" summary=\"Refactored packages and ensured targetSelectionUI checks as to whether given code contains Java files\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1731423594506</created>\n      <option name=\"number\" value=\"00003\" />\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1731423594506</updated>\n    </task>\n    <task id=\"LOCAL-00004\" summary=\"Readded indentation field to BracePair class\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732024749409</created>\n      <option name=\"number\" value=\"00004\" />\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732024749409</updated>\n    </task>\n    <task id=\"LOCAL-00005\" summary=\"[Driver: wp22246]&#10;[Navigator: jf22470]&#10;&#10;Added rudimentary scoring logic\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732028026798</created>\n      <option name=\"number\" value=\"00005\" />\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732028026798</updated>\n    </task>\n    <task id=\"LOCAL-00006\" summary=\"Fixing in preparation for merge\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732028726906</created>\n      <option name=\"number\" value=\"00006\" />\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732028726906</updated>\n    </task>\n    <task id=\"LOCAL-00007\" summary=\"Fixing in preparation for merge\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732028976047</created>\n      <option name=\"number\" value=\"00007\" />\n      <option name=\"presentableId\" value=\"LOCAL-00007\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732028976047</updated>\n    </task>\n    <task id=\"LOCAL-00008\" summary=\"Fixing in preparation for merge\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732028984227</created>\n      <option name=\"number\" value=\"00008\" />\n      <option name=\"presentableId\" value=\"LOCAL-00008\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732028984227</updated>\n    </task>\n    <task id=\"LOCAL-00009\" summary=\"Fixing in preparation for merge\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732028987480</created>\n      <option name=\"number\" value=\"00009\" />\n      <option name=\"presentableId\" value=\"LOCAL-00009\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732028987480</updated>\n    </task>\n    <task id=\"LOCAL-00010\" summary=\"Fixing in preparation for merge\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732028988037</created>\n      <option name=\"number\" value=\"00010\" />\n      <option name=\"presentableId\" value=\"LOCAL-00010\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732028988037</updated>\n    </task>\n    <task id=\"LOCAL-00011\" summary=\"Fixing in preparation for merge\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732029032738</created>\n      <option name=\"number\" value=\"00011\" />\n      <option name=\"presentableId\" value=\"LOCAL-00011\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732029032738</updated>\n    </task>\n    <task id=\"LOCAL-00012\" summary=\"Merged WillBranch and main\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732029266470</created>\n      <option name=\"number\" value=\"00012\" />\n      <option name=\"presentableId\" value=\"LOCAL-00012\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732029266470</updated>\n    </task>\n    <task id=\"LOCAL-00013\" summary=\"[Driver: wp22246]&#10;[Navigator: sj22795]&#10;Added tokenisation support for comments and implementation possibility for other types\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732628245089</created>\n      <option name=\"number\" value=\"00013\" />\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732628245089</updated>\n    </task>\n    <task id=\"LOCAL-00014\" summary=\"[Driver: wp22246]&#10;[Navigator: sj22795]&#10;Fixed bugs from last commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732629375568</created>\n      <option name=\"number\" value=\"00014\" />\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732629375568</updated>\n    </task>\n    <task id=\"LOCAL-00015\" summary=\"[Driver: of21284]&#10;[Navigator: wp22246]&#10;Fixed bugs from last commit\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732630495511</created>\n      <option name=\"number\" value=\"00015\" />\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732630495511</updated>\n    </task>\n    <task id=\"LOCAL-00016\" summary=\"[Driver: of21284]&#10;[Navigator: wp22246]&#10;Fixed merge conflict\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1732630906585</created>\n      <option name=\"number\" value=\"00016\" />\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1732630906585</updated>\n    </task>\n    <task id=\"LOCAL-00017\" summary=\"Added testing for DialPanel\">\n      <option name=\"closed\" value=\"true\" />\n      <created>1733238823991</created>\n      <option name=\"number\" value=\"00017\" />\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\n      <option name=\"project\" value=\"LOCAL\" />\n      <updated>1733238823991</updated>\n    </task>\n    <option name=\"localTasksCounter\" value=\"18\" />\n    <servers />\n  </component>\n  <component name=\"TypeScriptGeneratedFilesManager\">\n    <option name=\"version\" value=\"3\" />\n  </component>\n  <component name=\"Vcs.Log.Tabs.Properties\">\n    <option name=\"TAB_STATES\">\n      <map>\n        <entry key=\"MAIN\">\n          <value>\n            <State>\n              <option name=\"FILTERS\">\n                <map>\n                  <entry key=\"branch\">\n                    <value>\n                      <list>\n                        <option value=\"main\" />\n                      </list>\n                    </value>\n                  </entry>\n                </map>\n              </option>\n            </State>\n          </value>\n        </entry>\n      </map>\n    </option>\n  </component>\n  <component name=\"VcsManagerConfiguration\">\n    <MESSAGE value=\"Created new Java project, using Maven\" />\n    <MESSAGE value=\"Created project directory selection for user with minimal styling\" />\n    <MESSAGE value=\"Refactored packages and ensured targetSelectionUI checks as to whether given code contains Java files\" />\n    <MESSAGE value=\"Readded indentation field to BracePair class\" />\n    <MESSAGE value=\"[Driver: wp22246]&#10;[Navigator: jf22470]&#10;&#10;Added rudimentary scoring logic\" />\n    <MESSAGE value=\"Fixing for in preparation for merge\" />\n    <MESSAGE value=\"Fixing in preparation for merge\" />\n    <MESSAGE value=\"Merged WillBranch and main\" />\n    <MESSAGE value=\"[Driver: wp22246]&#10;[Navigator: sj22795]&#10;Added tokenisation support for comments and implementation possibility for other types\" />\n    <MESSAGE value=\"[Driver: wp22246]&#10;[Navigator: sj22795]&#10;Fixed bugs from last commit\" />\n    <MESSAGE value=\"[Driver: of20214]&#10;[Navigator: wp22246]&#10;Fixed bugs from last commit\" />\n    <MESSAGE value=\"[Driver: of21284]&#10;[Navigator: wp22246]&#10;Fixed bugs from last commit\" />\n    <MESSAGE value=\"[Driver: of21284]&#10;[Navigator: wp22246]&#10;Fixed merge conflict\" />\n    <MESSAGE value=\"Completed testing for dial panel\" />\n    <MESSAGE value=\"Added testing for DialPanel\" />\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Added testing for DialPanel\" />\n  </component>\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 864256b75fdf39252ff3ae7237afeac4faf404b5)
+++ b/.idea/workspace.xml	(date 1733239304456)
@@ -4,7 +4,16 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="b617a369-fdb8-4b85-91c1-69acbfc3efd4" name="Changes" comment="Added testing for DialPanel" />
+    <list default="true" id="b617a369-fdb8-4b85-91c1-69acbfc3efd4" name="Changes" comment="Optimized calculation method">
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024__13_55__Changes_.xml" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024,_14_57_[Changes]/shelved.patch" afterDir="false" />
+      <change afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_26_11_2024__14_57__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/XP_Metrics/EvaluateXP.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/XP_Metrics/EvaluateXP.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/userInterface/codeMetricsUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/userInterface/codeMetricsUI.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/src/main/java/userInterface/targetSelectionUI.java" beforeDir="false" afterPath="$PROJECT_DIR$/src/main/java/userInterface/targetSelectionUI.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -31,9 +40,6 @@
   &quot;associatedIndex&quot;: 6
 }</component>
   <component name="ProjectId" id="2of1mbn9qm5lSboevN1xxZbIZTI" />
-  <component name="ProjectLevelVcsManager">
-    <ConfirmationsSetting value="2" id="Add" />
-  </component>
   <component name="ProjectViewState">
     <option name="hideEmptyMiddlePackages" value="true" />
     <option name="showLibraryContents" value="true" />
@@ -226,15 +232,7 @@
       <option name="project" value="LOCAL" />
       <updated>1732630906585</updated>
     </task>
-    <task id="LOCAL-00017" summary="Added testing for DialPanel">
-      <option name="closed" value="true" />
-      <created>1733238823991</created>
-      <option name="number" value="00017" />
-      <option name="presentableId" value="LOCAL-00017" />
-      <option name="project" value="LOCAL" />
-      <updated>1733238823991</updated>
-    </task>
-    <option name="localTasksCounter" value="18" />
+    <option name="localTasksCounter" value="17" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -277,8 +275,7 @@
     <MESSAGE value="[Driver: of20214]&#10;[Navigator: wp22246]&#10;Fixed bugs from last commit" />
     <MESSAGE value="[Driver: of21284]&#10;[Navigator: wp22246]&#10;Fixed bugs from last commit" />
     <MESSAGE value="[Driver: of21284]&#10;[Navigator: wp22246]&#10;Fixed merge conflict" />
-    <MESSAGE value="Completed testing for dial panel" />
-    <MESSAGE value="Added testing for DialPanel" />
-    <option name="LAST_COMMIT_MESSAGE" value="Added testing for DialPanel" />
+    <MESSAGE value="Optimized calculation method" />
+    <option name="LAST_COMMIT_MESSAGE" value="Optimized calculation method" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]/shelved.patch
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]/shelved.patch b/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]/shelved.patch
new file mode 100644
--- /dev/null	(date 1733234123213)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]/shelved.patch	(date 1733234123213)
@@ -0,0 +1,50 @@
+Index: src/test/java/XP_Metrics/classCheckerTest.java
+===================================================================
+diff --git a/src/test/java/XP_Metrics/classCheckerTest.java b/src/test/java/XP_Metrics/classCheckerTest.java
+deleted file mode 100644
+--- a/src/test/java/XP_Metrics/classCheckerTest.java	(revision b472bc7d97b7bba0029fb2e2b86016bd7aab99cb)
++++ /dev/null	(revision b472bc7d97b7bba0029fb2e2b86016bd7aab99cb)
+@@ -1,43 +0,0 @@
+-package XP_Metrics;
+-
+-import org.junit.jupiter.api.Test;
+-import java.util.ArrayList;
+-
+-import static org.junit.jupiter.api.Assertions.*;
+-
+-public class classCheckerTest {
+-
+-    @Test
+-    public void testImportsAtTop() {
+-        String path = "testFiles/ImportsAtTop.java";
+-        ArrayList<getTokens.Token> tokens = new ArrayList<>();
+-        tokens.add(new getTokens.Token("Import", 1, 6));
+-        ArrayList<Score> scores = classChecker.checkImports(path, tokens);
+-
+-        assertEquals(1, scores.size());
+-        assertEquals(0, scores.get(0).getScore());
+-        assertEquals("Import at top of the class", scores.get(0).getMessage());
+-    }
+-
+-    @Test
+-    public void testImportsNotAtTop() {
+-        String path = "testFiles/ImportsNotAtTop.java";
+-        ArrayList<getTokens.Token> tokens = new ArrayList<>();
+-        tokens.add(new getTokens.Token("Import", 5, 8));
+-        ArrayList<Score> scores = classChecker.checkImports(path, tokens);
+-
+-        assertEquals(1, scores.size());
+-        assertEquals(10, scores.get(0).getScore());
+-        assertEquals("Import not at top of class", scores.get(0).getMessage());
+-    }
+-
+-    @Test
+-    public void testNoImports() {
+-        // 测试文件中没有 import 语句
+-        String path = "testFiles/NoImports.java";
+-        ArrayList<getTokens.Token> tokens = new ArrayList<>();
+-        ArrayList<Score> scores = classChecker.checkImports(path, tokens);
+-
+-        assertEquals(0, scores.size());
+-    }
+-}
Index: .idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024__13_55__Changes_.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024__13_55__Changes_.xml b/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024__13_55__Changes_.xml
new file mode 100644
--- /dev/null	(date 1733234129365)
+++ b/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024__13_55__Changes_.xml	(date 1733234129365)
@@ -0,0 +1,4 @@
+<changelist name="Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]" date="1733234123407" recycled="true" deleted="true">
+  <option name="PATH" value="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_03_12_2024,_13_55_[Changes]/shelved.patch" />
+  <option name="DESCRIPTION" value="Uncommitted changes before Update at 03/12/2024, 13:55 [Changes]" />
+</changelist>
\ No newline at end of file
