Index: Code/src/main/java/XP_Metrics/getTokens.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package XP_Metrics;\r\n\r\nimport javax.lang.model.SourceVersion;\r\nimport java.io.File;\r\nimport java.io.FileNotFoundException;\r\nimport java.util.*;\r\n\r\npublic class getTokens {\r\n\r\n\r\n\r\n    public static class Token {\r\n        public int start;\r\n        public String type;\r\n        public String name;\r\n        public int indentationLevel;\r\n\r\n        public Token(int start, String type, String name, int indentationLevel) {\r\n            this.start = start;\r\n            this.type = type;\r\n            this.name = name;\r\n            this.indentationLevel = indentationLevel;\r\n        }\r\n        @Override\r\n        public String toString() {\r\n            return \"[\" + start +  \",\" + type + \",\" + name +  \",\" + indentationLevel + \"]\";\r\n        }\r\n\r\n        public boolean equals(Object o) {\r\n            if (this == o) return true;\r\n            if (!(o instanceof Token token)) return false;\r\n            return start > token.start;\r\n        }\r\n    }\r\n\r\n    //Stores the start and end of a set of curly braces,\r\n    //along with the type (method, class, if, while, etc.) and the name\r\n    public static class BracePair extends Token {\r\n        public int start;\r\n        public int end;\r\n        public String type;\r\n        public String name;\r\n        int nestedness;\r\n        int indentationLevel;\r\n\r\n\r\n\r\n        public BracePair(int Start, String Type, String Name, int Nestedness, int Indentation) {\r\n            super(Start, Type, Name, Indentation);\r\n            this.nestedness = Nestedness;\r\n        }\r\n\r\n        @Override\r\n        public String toString() {\r\n            return \"[\" + start + \",\" + end + \",\" + type + \",\" + name + \",\" + nestedness + \",\" + indentationLevel + \"]\";\r\n        }\r\n\r\n        @Override\r\n        public boolean equals(Object o) {\r\n            if (this == o) return true;\r\n            if (!(o instanceof BracePair bracePair)) return false;\r\n            return end > bracePair.end;\r\n        }\r\n\r\n        @Override\r\n        public int hashCode() {\r\n            return Objects.hash(start, end, type);\r\n        }\r\n    }\r\n\r\n\r\n    //Returns an arraylist of Bracepairs for a given class\r\n    public static ArrayList<Token> getBracePairs(String path) {\r\n        Scanner scanner;\r\n        try {\r\n            scanner = new Scanner(new File(path));\r\n        } catch (FileNotFoundException e) {\r\n            throw new RuntimeException(e);\r\n        }\r\n\r\n        ArrayList<Token> tokenArrayList = new ArrayList<>();\r\n        Stack<BracePair> bracePairStack = new Stack<>();\r\n\r\n\r\n        int lineNum = 0;\r\n        int nestLevel = 0;\r\n\r\n        String latestKeyword = null;\r\n        String latestIdentity = null;\r\n        while (scanner.hasNextLine()) {\r\n            String line = scanner.nextLine();\r\n\r\n            int indentLevel = (line.length() - line.replaceAll(\"^(\\\\t| {4})+\", \"\").length()) / 4;\r\n            lineNum++;\r\n\r\n            //Removes all non word or brace characters\r\n            line = line.replaceAll(\"([\\\"']).*(\\\\1)+|[^a-zA-Z0-9{}\\\"']+\", \" \");\r\n\r\n\r\n            //Breaks up each line into statements in the case that a line contains multiple statements\r\n            for (String statement : line.split(\";\")) {\r\n                if (statement.contains(\"//\")) {\r\n                    tokenArrayList.add(new Token(lineNum, \"Comment\", statement, indentLevel));\r\n                    break;\r\n                }\r\n                if (statement.contains(\"import\")) {\r\n                    tokenArrayList.add(new Token(lineNum, \"Import\", statement, indentLevel));\r\n                }\r\n                Scanner s = new Scanner(statement);\r\n\r\n                //Iterates through statement word by word, rather than using .contains(\"{\") to prevent errors if multiple curly brackets occur\r\n                while (s.hasNext()) {\r\n                    String word = s.next();\r\n\r\n                    //Updates the most recently detected keyword and identity if not null\r\n                    latestKeyword = Optional.ofNullable(isControlStatement(word)).orElse(latestKeyword);\r\n                    latestIdentity = Optional.ofNullable(isIdentityStatement(word)).orElse(latestIdentity);\r\n\r\n                    //If \"{\" detected, adds new bracepair to the stack\r\n                    if (word.contains(\"{\")) {\r\n                        bracePairStack.push(new BracePair(lineNum, latestKeyword, latestIdentity, nestLevel, indentLevel));\r\n                        latestKeyword = null;\r\n                        latestIdentity = null;\r\n                        nestLevel++;\r\n                    }\r\n\r\n                    //If \"}\" detected, updates the end value of the top item of the stack, and moves it from the stack to arraylist\r\n                    if (word.contains(\"}\")) {\r\n                        bracePairStack.peek().end = lineNum;\r\n                        tokenArrayList.add(bracePairStack.pop());\r\n                        nestLevel--;\r\n                    }\r\n\r\n                }\r\n            }\r\n        }\r\n\r\n        //Sorts arraylist so that pairs that start earlier are first in the array\r\n        tokenArrayList.sort((a, b) -> ((a.start > b.start) ? 1 : -1));\r\n\r\n        return tokenArrayList;\r\n    }\r\n\r\n    //Returns whether a given string is a Java keyword, an identifier, or a name\r\n    private static String identify(String s) {\r\n        s = s.replaceAll(\"\\\\W\", \"\");\r\n        if (SourceVersion.isKeyword(s)) {return \"KEYWORD\";}\r\n        if (SourceVersion.isIdentifier(s)) {return \"IDENTIFIER\";}\r\n        if (SourceVersion.isName(s)) {return \"NAME\";}\r\n\r\n        return \"UNIDENTIFIED\";\r\n    }\r\n\r\n    //Detects if given string is a reserved Java keyword\r\n    private static String isControlStatement(String s) {\r\n        s = s.replaceAll(\"(([\\\"']).*(\\\\2)+|\\\\W)+\", \"\");\r\n        if (SourceVersion.isKeyword(s)) {\r\n            s = s.toUpperCase();\r\n            return switch (s) {\r\n                default -> s;\r\n                case \"PUBLIC\", //If any of these words are detected, identifies as method declaration\r\n                     \"PRIVATE\",\r\n                     \"PROTECTED\",\r\n                     \"STATIC\",\r\n                     \"VOID\" -> \"METHOD\";\r\n                case \"NULL\", //Java primitives are also identified as keywords; prevents being identified as such\r\n                     \"INT\",\r\n                     \"DOUBLE\",\r\n                     \"FLOAT\",\r\n                     \"LONG\",\r\n                     \"SHORT\",\r\n                     \"BYTE\",\r\n                     \"CHAR\",\r\n                     \"BREAK\" -> null;\r\n            };\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n    //Detects if given string is a valid variable name\r\n    private static String isIdentityStatement(String s) {\r\n        s = s.replaceAll(\"(([\\\"']).*(\\\\2)+|\\\\W)+\", \"\");\r\n        if (SourceVersion.isIdentifier(s)) {\r\n            return s.toUpperCase();\r\n        }\r\n\r\n        return null;\r\n    }\r\n\r\n\r\n}\r\n\r\n// D:\\Documents\\Uni\\Work\\CE320 - Large Scale Systems and Extreme Programming\\Project\\Code\\src\\main\\java\\XP_Metrics\\getBracePairs.java
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Code/src/main/java/XP_Metrics/getTokens.java b/Code/src/main/java/XP_Metrics/getTokens.java
--- a/Code/src/main/java/XP_Metrics/getTokens.java	(revision 605494072ba7ef64288bbd8ca6f5cf915355a46c)
+++ b/Code/src/main/java/XP_Metrics/getTokens.java	(date 1732631123175)
@@ -101,10 +101,11 @@
             for (String statement : line.split(";")) {
                 if (statement.contains("//")) {
                     tokenArrayList.add(new Token(lineNum, "Comment", statement, indentLevel));
-                    break;
+                    continue;
                 }
                 if (statement.contains("import")) {
                     tokenArrayList.add(new Token(lineNum, "Import", statement, indentLevel));
+                    continue;
                 }
                 Scanner s = new Scanner(statement);
 
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"6969f1b7-0291-4350-99ec-5f2c247a1fc5\" name=\"Changes\" comment=\"Link static dial widget\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"Class\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 6\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2p4fj7SpRfPcIZWeIonqL7kW5cY\" />\r\n  <component name=\"ProjectLevelVcsManager\">\r\n    <ConfirmationsSetting value=\"2\" id=\"Add\" />\r\n  </component>\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;Application.Dashboard.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.DialPanel.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.DialWidget.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.Main.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.TokeniserTest.executor&quot;: &quot;Run&quot;,\r\n    &quot;Application.targetUITest.executor&quot;: &quot;Run&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;SHARE_PROJECT_CONFIGURATION_FILES&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;,\r\n    &quot;kotlin-language-version-configured&quot;: &quot;true&quot;,\r\n    &quot;last_opened_file_path&quot;: &quot;/Users/jicongchuan/Group_Project&quot;,\r\n    &quot;node.js.detected.package.eslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.detected.package.tslint&quot;: &quot;true&quot;,\r\n    &quot;node.js.selected.package.eslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;node.js.selected.package.tslint&quot;: &quot;(autodetect)&quot;,\r\n    &quot;nodejs_package_manager_path&quot;: &quot;npm&quot;,\r\n    &quot;vue.rearranger.settings.migration&quot;: &quot;true&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"CreateClassDialog.RecentsKey\">\r\n      <recent name=\"userInterface\" />\r\n    </key>\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"$PROJECT_DIR$/Code/src/main/java\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SharedIndexes\">\r\n    <attachedChunks>\r\n      <set>\r\n        <option value=\"jdk-22-openjdk-22-3183f394aec4-bad0321e\" />\r\n      </set>\r\n    </attachedChunks>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"6969f1b7-0291-4350-99ec-5f2c247a1fc5\" name=\"Changes\" comment=\"\" />\r\n      <created>1732030400093</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1732030400093</updated>\r\n      <workItem from=\"1732030401115\" duration=\"1986000\" />\r\n      <workItem from=\"1732443281112\" duration=\"15000\" />\r\n      <workItem from=\"1732443309659\" duration=\"56000\" />\r\n      <workItem from=\"1732568324424\" duration=\"1381000\" />\r\n      <workItem from=\"1732569718490\" duration=\"12595000\" />\r\n      <workItem from=\"1732618551132\" duration=\"826000\" />\r\n      <workItem from=\"1732626061084\" duration=\"693000\" />\r\n    </task>\r\n    <task id=\"LOCAL-00001\" summary=\"xml\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732030640532</created>\r\n      <option name=\"number\" value=\"00001\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00001\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732030640532</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00002\" summary=\"Optimized programming format\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732030755950</created>\r\n      <option name=\"number\" value=\"00002\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00002\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732030755950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00003\" summary=\"Add a new classChecker\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732031744671</created>\r\n      <option name=\"number\" value=\"00003\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00003\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732031744671</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00004\" summary=\"Add a new functionChecker\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732031764553</created>\r\n      <option name=\"number\" value=\"00004\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00004\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732031764553</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00005\" summary=\"Add a new Tokeniser(Test)\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732031781112</created>\r\n      <option name=\"number\" value=\"00005\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00005\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732031781112</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00006\" summary=\"Link static dial widget\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1732619285211</created>\r\n      <option name=\"number\" value=\"00006\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00006\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1732619285211</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"7\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"TypeScriptGeneratedFilesManager\">\r\n    <option name=\"version\" value=\"3\" />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"xml\" />\r\n    <MESSAGE value=\"Optimized programming format\" />\r\n    <MESSAGE value=\"Add a new classChecker\" />\r\n    <MESSAGE value=\"Add a new functionChecker\" />\r\n    <MESSAGE value=\"Add a new Tokeniser(Test)\" />\r\n    <MESSAGE value=\"Link static dial widget\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"Link static dial widget\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 605494072ba7ef64288bbd8ca6f5cf915355a46c)
+++ b/.idea/workspace.xml	(date 1732631123238)
@@ -4,8 +4,10 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="6969f1b7-0291-4350-99ec-5f2c247a1fc5" name="Changes" comment="Link static dial widget">
+    <list default="true" id="6969f1b7-0291-4350-99ec-5f2c247a1fc5" name="Changes" comment="added catch for import statements">
+      <change beforePath="$PROJECT_DIR$/.idea/misc.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/misc.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Code/src/main/java/XP_Metrics/getTokens.java" beforeDir="false" afterPath="$PROJECT_DIR$/Code/src/main/java/XP_Metrics/getTokens.java" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
@@ -29,7 +31,7 @@
   &quot;associatedIndex&quot;: 6
 }</component>
   <component name="ProjectId" id="2p4fj7SpRfPcIZWeIonqL7kW5cY" />
-  <component name="ProjectLevelVcsManager">
+  <component name="ProjectLevelVcsManager" settingsEditedManually="true">
     <ConfirmationsSetting value="2" id="Add" />
   </component>
   <component name="ProjectViewState">
@@ -65,6 +67,34 @@
     <key name="MoveFile.RECENT_KEYS">
       <recent name="$PROJECT_DIR$/Code/src/main/java" />
     </key>
+  </component>
+  <component name="RunManager" selected="Application.Main">
+    <configuration name="Main" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="Main" />
+      <module name="Code" />
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <configuration name="targetUITest" type="Application" factoryName="Application" temporary="true" nameIsGenerated="true">
+      <option name="MAIN_CLASS_NAME" value="userInterface.targetUITest" />
+      <module name="Code" />
+      <extension name="coverage">
+        <pattern>
+          <option name="PATTERN" value="userInterface.*" />
+          <option name="ENABLED" value="true" />
+        </pattern>
+      </extension>
+      <method v="2">
+        <option name="Make" enabled="true" />
+      </method>
+    </configuration>
+    <recent_temporary>
+      <list>
+        <item itemvalue="Application.Main" />
+        <item itemvalue="Application.targetUITest" />
+      </list>
+    </recent_temporary>
   </component>
   <component name="SharedIndexes">
     <attachedChunks>
@@ -137,7 +167,15 @@
       <option name="project" value="LOCAL" />
       <updated>1732619285211</updated>
     </task>
-    <option name="localTasksCounter" value="7" />
+    <task id="LOCAL-00007" summary="added catch for import statements">
+      <option name="closed" value="true" />
+      <created>1732629968802</created>
+      <option name="number" value="00007" />
+      <option name="presentableId" value="LOCAL-00007" />
+      <option name="project" value="LOCAL" />
+      <updated>1732629968802</updated>
+    </task>
+    <option name="localTasksCounter" value="8" />
     <servers />
   </component>
   <component name="TypeScriptGeneratedFilesManager">
@@ -161,6 +199,8 @@
     <MESSAGE value="Add a new functionChecker" />
     <MESSAGE value="Add a new Tokeniser(Test)" />
     <MESSAGE value="Link static dial widget" />
-    <option name="LAST_COMMIT_MESSAGE" value="Link static dial widget" />
+    <MESSAGE value="adding unbased" />
+    <MESSAGE value="added catch for import statements" />
+    <option name="LAST_COMMIT_MESSAGE" value="added catch for import statements" />
   </component>
 </project>
\ No newline at end of file
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"ExternalStorageConfigurationManager\" enabled=\"true\" />\r\n  <component name=\"MavenProjectsManager\">\r\n    <option name=\"originalFiles\">\r\n      <list>\r\n        <option value=\"$PROJECT_DIR$/Code/pom.xml\" />\r\n      </list>\r\n    </option>\r\n    <option name=\"workspaceImportForciblyTurnedOn\" value=\"true\" />\r\n  </component>\r\n  <component name=\"ProjectRootManager\" version=\"2\" languageLevel=\"JDK_X\" project-jdk-name=\"corretto-22\" project-jdk-type=\"JavaSDK\">\r\n    <output url=\"file://$PROJECT_DIR$/out\" />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
--- a/.idea/misc.xml	(revision 5e4764c06023ebddfd855a9f8342d3871e2686e5)
+++ b/.idea/misc.xml	(date 1732629648101)
@@ -7,7 +7,6 @@
         <option value="$PROJECT_DIR$/Code/pom.xml" />
       </list>
     </option>
-    <option name="workspaceImportForciblyTurnedOn" value="true" />
   </component>
   <component name="ProjectRootManager" version="2" languageLevel="JDK_X" project-jdk-name="corretto-22" project-jdk-type="JavaSDK">
     <output url="file://$PROJECT_DIR$/out" />
